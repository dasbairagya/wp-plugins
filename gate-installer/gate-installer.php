<?php
/*Plugin Name: Gate Installer
Plugin URI:   https://www.goigi.com
Description:  Simple WordPress Plugin To Play Random Image
Version:      1.0.0
Author:       IGI
Author URI:   https://www.goigi.com
License:      GPL2
License URI:  https://www.gnu.org/licenses/gpl-2.0.html
Text Domain:  wporg
Domain Path:  /languages
License:     GPL2
 
{Plugin Name} is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 2 of the License, or
any later version.
 
{Plugin Name} is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.
 
You should have received a copy of the GNU General Public License
along with {Plugin Name}. If not, see {License URI}.
*/
/*
 * Option Page Generated by the WordPress Option Page generator
 * at http://jeremyhixon.com/wp-tools/option-page/
*/
// Exit if accessed directly.
if ( ! defined( 'ABSPATH' ) ) {
	exit; 
}
// Define WC_PLUGIN_FILE.
if ( ! defined( 'GI_FILE' ) ) {
	define( 'GI_FILE', __FILE__ );
}
define("GI_URL", plugin_dir_url( __FILE__ ));
define("GI_ROOT_URI", plugins_url( __FILE__ ));
define("ADMIN_URI", admin_url());
define("PATH", __DIR__);

class GI{
	private $loader;
	public function __construct() {
		add_action('admin_menu', array( $this, 'create_installer_menu') );
		add_action( 'init', array( $this, 'codex_Job_init' ) );	
		add_action( 'admin_init', array( $this, 'gi_settings_page_init' ) );
	}

	public function create_installer_menu(){
	$my_page = add_menu_page('Installer', 'Installer', 'manage_options', 'installer', array($this, 'installer_callback'), 'dashicons-hammer', 2);
	$my_page1 = add_submenu_page(null,'User Details', 'User Details', 'read','user-details', array( $this, 'user_details')); 
	$my_page2 = add_submenu_page('installer','GI Settings', 'Settings', 'manage_options','gi-settings', array( $this, 'gi_settings_create_admin_page' ),'dashicons-admin-tools');
	add_action( "admin_print_scripts-$my_page", array( $this, 'GI_enqueue_script' ) );
	add_action( "admin_print_scripts-$my_page1", array( $this, 'GI_enqueue_script' ) );
	add_action( "admin_print_scripts-$my_page2", array( $this, 'GI_enqueue_script' ) );

	}
	//#############################  Setting Page ################################
	public function gi_settings_create_admin_page() {
		$this->gi_settings_options = get_option( 'gi_settings_option_name' ); ?>

		<div class="wrap">
			<h2>GI Settings</h2>
			
			<?php settings_errors(); ?>

			<form method="post" action="options.php">
				<?php
					settings_fields( 'gi_settings_option_group' );
					do_settings_sections( 'gi-settings-admin' );
					submit_button();
				?>
			</form>
		</div>
	<?php }
	public function gi_settings_page_init() {
		register_setting(
			'gi_settings_option_group', // option_group
			'gi_settings_option_name', // option_name
			array( $this, 'gi_settings_sanitize' ) // sanitize_callback
		);

		add_settings_section(
			'gi_settings_setting_section', // id
			' ', // title
			array( $this, 'gi_settings_section_info' ), // callback
			'gi-settings-admin' // page
		);

		add_settings_field(
			'folder_name_0', // id
			'Folder Name', // title
			array( $this, 'folder_name_0_callback' ), // callback
			'gi-settings-admin', // page
			'gi_settings_setting_section' // section
		);

		add_settings_field(
			'allow_cookies_1', // id
			'Allow cookies', // title
			array( $this, 'allow_cookies_1_callback' ), // callback
			'gi-settings-admin', // page
			'gi_settings_setting_section' // section
		);
	}


	public function gi_settings_sanitize($input) {
		$sanitary_values = array();
		if ( isset( $input['folder_name_0'] ) ) {
			$sanitary_values['folder_name_0'] = sanitize_text_field( $input['folder_name_0'] );
		}

		if ( isset( $input['allow_cookies_1'] ) ) {
			$sanitary_values['allow_cookies_1'] = $input['allow_cookies_1'];
		}

		return $sanitary_values;
	}

	public function gi_settings_section_info() {
		
	}

	public function folder_name_0_callback() {
		printf(
			'<input class="regular-text" type="text" name="gi_settings_option_name[folder_name_0]" id="folder_name_0" value="%s">',
			isset( $this->gi_settings_options['folder_name_0'] ) ? esc_attr( $this->gi_settings_options['folder_name_0']) : ''
		);
	}

	public function allow_cookies_1_callback() {
		printf(
			'<input type="checkbox" name="gi_settings_option_name[allow_cookies_1]" id="allow_cookies_1" value="allow_cookies_1" %s> <label for="allow_cookies_1">Check to allow cookie for this page</label>',
			( isset( $this->gi_settings_options['allow_cookies_1'] ) && $this->gi_settings_options['allow_cookies_1'] === 'allow_cookies_1' ) ? 'checked' : ''
		);
	}
//############################# End Setting Page ################################
	public function user_details(){
		require_once('inc/view-user.php');
	}
	//User Capabilities
	public function add_user_capability(){
	   $current_user   = wp_get_current_user();
	    $role_name      = $current_user->roles[0];
	    switch($role_name) {
	        case Installer:
	            return 'installer';
	            break;
	        case Subscriber:
	            return 'read';
	            break;
	        case Administrator:
	            return 'manage_options';
	            break;
	        case Editor:
	            return 'edit_pages';
	            break; 
	        case Contributor:
	            return 'edit_posts';
	            break;
	        default:
	            return 'read';
	    }

	}
	//enque script 
	public function GI_enqueue_script() {   
	wp_enqueue_style ('bootstrap',  'https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css'  );
	wp_enqueue_style ('style1', 'http://fonts.googleapis.com/css?family=Open+Sans'  );
	wp_enqueue_style ('style2', 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css'  );
	wp_enqueue_style ('style', GI_URL. 'css/style.css'  );
	
	wp_enqueue_script( 'jquery', GI_URL . 'js/jquery.min.js', array(), false, true );
	wp_enqueue_script('bootstrapjs', '//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/js/bootstrap.min.js', array(), null, true);
    wp_enqueue_script( 'my_custom_script', GI_URL . 'js/script.js', array(), false, true);
	}
	public function installer_callback(){
		include_once('inc/installer.php');	
	}
	public function test(){
		//test some quick code

	}

	public function codex_Job_init() {
	    $labels = array(
	        'name'               => _x( 'My Jobs', 'post type general name', 'your-plugin-textdomain' ),
	        'singular_name'      => _x( 'My Job', 'post type singular name', 'your-plugin-textdomain' ),
	        'add_new'            => 'Add Job',
	        'all_items'          => 'All Job',
	        'edit_item'          =>'Edit Job',
	    );
	    $args = array(
	        'labels'             => $labels,
	        'description'        => __( 'Description.', 'your-plugin-textdomain' ),
	        'public'             => true,
	        'publicly_queryable' => true,
	        'show_ui'            => true,
	        'show_in_menu'       => true,
	        'query_var'          => true,
	        'rewrite'            => array( 'slug' => 'job' ),
	        'capability_type'    => 'post',
	        'has_archive'        => true,
	        'menu_position'      => 2,
	        'menu_icon'			 =>'dashicons-pressthis',
	        'supports'           => array( 'title', 'editor', 'author', 'thumbnail', 'comments' )
	    );
	    register_post_type( 'job', $args );
	}
	
}
if ( is_admin() )
$GI = new GI();

/* 
 * Retrieve this value with:
 * $gi_settings_options = get_option( 'gi_settings_option_name' ); // Array of All Options
 * $folder_name_0 = $gi_settings_options['folder_name_0']; // Folder Name
 * $allow_cookies_1 = $gi_settings_options['allow_cookies_1']; // Allow cookies
 */